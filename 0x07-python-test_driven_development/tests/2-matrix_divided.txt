The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
---------------------

Importing function from the module:

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

checking Dividing a matrix by 3:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

checking Dividing a matrix by 0:
    >>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
    Traceback (most recent call last):
    	      ...
    ZeroDivisionError: division by zero

checking Dividing a matrix by a float number:
    >>> matrix_divided([[10, 20, 30], [40.2, 50.4, 60.6], [-70, -80.71, 0]], 7.7)
    [[1.29, 2.59, 3.89], [5.22, 6.54, 7.87], [-9.09, -10.48, 0.0]]

checking Passing an empty matrix:
    >>> matrix_divided([], 24)
    Traceback (most recent call last):
    	      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

checking Passing a tuple as an argument:
    >>> matrix_divided((8, 1, 6), 3)
    Traceback (most recent call last):
    	      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

checking Dividing a matrix which its rows don't have the same size:
    >>> matrix_divided([[3, 4], [11, 6.6, -5, 3], [25]], 9)
    Traceback (most recent call last):
    	      ...
    TypeError: Each row of the matrix must have the same size

checking Dividing a matrix which its elements aren't integer/float numbers:
    >>> matrix_divided([["Hello", "World"], ["Hello", "School"]], 5)
    Traceback (most recent call last):
     	       ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

checking Dividing a matrix which its elements aren't integer/float numbers 2:
    >>> matrix_divided([["1"], ["2", "3"], ["5", "6", "7"]], 10)
    Traceback (most recent call last):
    	      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

checking Dividing a matrix which some of its elements aren't integer/float numbers:
    >>> matrix_divided([[3.2, 6], ['9', 4.1], [32.6, '13'], [7.7, '65.5', 11.11]], 10)
    Traceback (most recent call last):
    	      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

checking Passing a matrix which one of its elements is an empty list:
    >>> matrix_divided([[4.4, 99], [], [-6, 6]], 2)
    Traceback (most recent call last):
    	      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

checking Passing a matrix which one of its elements is a tuple:
    >>> matrix_divided([[-9, 6], (4, 3), [8, -2]], 2)
    Traceback (most recent call last):
    	      ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

checking Passing div as a list
    >>> matrix_divided([[5, 8], [3, 3]], [5])
    Traceback (most recent call last):
    	      ...
    TypeError: div must be a number

checking Passing div as a string
    >>> matrix_divided([[5, 1], [3, 3]], "5")
    Traceback (most recent call last):
    	      ...
    TypeError: div must be a number

checking Dividing a matrix which has positive and negative integer/float numbers
    >>> matrix_divided([[6, 11.06, 6], [56, 21.12, -89]], 12.21)
    [[0.49, 0.90, 0.49], [4.58, 1.72, -7.28]]
